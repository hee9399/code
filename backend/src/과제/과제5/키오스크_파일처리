FileOutputStream 의 객체를 만들때 생성자에서 true값을주는 이유는?
	이어쓰기위해서
		제품이 등록이되면 기존꺼에서 이어쓰기위해 제품이 여러개니까
		
파일입력객체 - FileInputStream fileInputStream = new FileInputStream( filePath ); 


byte[] inByteArray = new byte[ (int)file.length() ];
	 inByteArray배열의 길이를  file.length 해당파일의 length 만큼 지정해준다
 
 read - 파일을 읽어온다
 
 String outStr = name+","+stock+","+price+","+basket+"\n";
				// 3. 파일에 내보내기 // 1. 파일출력스트림 객체(if밖에) 2.문자열->바이트배열 변환 3. 바이트배열 내보내기	!예외처리
				fileOutputStream.write( outStr.getBytes() );
--------------------------------------------------------------------------------------------------------				
	String 은 클래스라서 write는 Bytes 만 가능하기때문에 타입변환을 해준다
----------------------------------------------------------------------------------------------------------
	[ch-1] 1을 빼주는경우는?
		인덱스를 빼준다라는 개념인데 인덱스는 0번부터 시작한다
		근대 해당 메뉴에서 0번은 재고가 아니라 결제이기 때문에 1을 빼준다 
	-------------------------------------------------------------------------------------------------------
		String outStr = ""; // 파일에 저장하기위한 클래스
				for( int i = 0 ; i<재고관리.length ; i++ ) { // 배열내 모든 데이터를 하나의 문자열 변환
					outStr += 재고관리[i].split(",")[0]+","+재고관리[i].split(",")[1]+
								","+재고관리[i].split(",")[2]+","+재고관리[i].split(",")[3]+"\n";
				} // for end 
				
		for문을 쓰는 이유는?
			해당 outStr 에 전체를 저장해주려고 
-------------------------------------------------------------------------------------------------------			
		 Integer.parseInt (String 을 int로 변환해줄때 사용한다)
		 	- 전체를 보여줄때 

------------------------------------------------------------------------------------
if( stock == 0 ) {System.out.print( (i+1) + ":" + name+"[재고없음] ");} // 재고가 없으면 
						else { System.out.print( (i+1) + ":" + name+"["+price+"] "); }	// 재고가 있으면
						

	(i+1) i가1을 더해주는 이유는 stock == 0 선택된 재고가 없을때 기준에 제품은 1부터 시작인데 인덱스는 0부터 시작이니까
	사용자에게 1부터 보여주기위헤 1을 더한다















			